// Generated by ProtoGen, Version=2.4.1.521, Culture=neutral, PublicKeyToken=55f7125234beb589.  DO NOT EDIT!
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace KRPC.Schema.RPC {
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class RPC {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_RPC_Request__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::KRPC.Schema.RPC.Request, global::KRPC.Schema.RPC.Request.Builder> internal__static_RPC_Request__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_RPC_Response__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::KRPC.Schema.RPC.Response, global::KRPC.Schema.RPC.Response.Builder> internal__static_RPC_Response__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static RPC() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          "CglSUEMucHJvdG8SA1JQQyI7CgdSZXF1ZXN0Eg8KB3NlcnZpY2UYASACKAkS" + 
          "DgoGbWV0aG9kGAIgAigJEg8KB3JlcXVlc3QYAyABKAwiVwoIUmVzcG9uc2US" + 
          "DAoEdGltZRgBIAIoARIUCgVlcnJvchgCIAIoCDoFZmFsc2USFQoNZXJyb3Jf" + 
          "bWVzc2FnZRgDIAEoCRIQCghyZXNwb25zZRgEIAEoDA==");
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_RPC_Request__Descriptor = Descriptor.MessageTypes[0];
        internal__static_RPC_Request__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::KRPC.Schema.RPC.Request, global::KRPC.Schema.RPC.Request.Builder>(internal__static_RPC_Request__Descriptor,
                new string[] { "Service", "Method", "Request_", });
        internal__static_RPC_Response__Descriptor = Descriptor.MessageTypes[1];
        internal__static_RPC_Response__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::KRPC.Schema.RPC.Response, global::KRPC.Schema.RPC.Response.Builder>(internal__static_RPC_Response__Descriptor,
                new string[] { "Time", "Error", "ErrorMessage", "Response_", });
        return null;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          }, assigner);
    }
    #endregion
    
  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Request : pb::GeneratedMessage<Request, Request.Builder> {
    private Request() { }
    private static readonly Request defaultInstance = new Request().MakeReadOnly();
    private static readonly string[] _requestFieldNames = new string[] { "method", "request", "service" };
    private static readonly uint[] _requestFieldTags = new uint[] { 18, 26, 10 };
    public static Request DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Request DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Request ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::KRPC.Schema.RPC.RPC.internal__static_RPC_Request__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Request, Request.Builder> InternalFieldAccessors {
      get { return global::KRPC.Schema.RPC.RPC.internal__static_RPC_Request__FieldAccessorTable; }
    }
    
    public const int ServiceFieldNumber = 1;
    private bool hasService;
    private string service_ = "";
    public bool HasService {
      get { return hasService; }
    }
    public string Service {
      get { return service_; }
    }
    
    public const int MethodFieldNumber = 2;
    private bool hasMethod;
    private string method_ = "";
    public bool HasMethod {
      get { return hasMethod; }
    }
    public string Method {
      get { return method_; }
    }
    
    public const int Request_FieldNumber = 3;
    private bool hasRequest_;
    private pb::ByteString request_ = pb::ByteString.Empty;
    public bool HasRequest_ {
      get { return hasRequest_; }
    }
    public pb::ByteString Request_ {
      get { return request_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasService) return false;
        if (!hasMethod) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _requestFieldNames;
      if (hasService) {
        output.WriteString(1, field_names[2], Service);
      }
      if (hasMethod) {
        output.WriteString(2, field_names[0], Method);
      }
      if (hasRequest_) {
        output.WriteBytes(3, field_names[1], Request_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasService) {
          size += pb::CodedOutputStream.ComputeStringSize(1, Service);
        }
        if (hasMethod) {
          size += pb::CodedOutputStream.ComputeStringSize(2, Method);
        }
        if (hasRequest_) {
          size += pb::CodedOutputStream.ComputeBytesSize(3, Request_);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Request ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Request ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Request ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Request ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Request ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Request ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Request ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Request ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Request ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Request ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Request MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Request prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Request, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Request cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Request result;
      
      private Request PrepareBuilder() {
        if (resultIsReadOnly) {
          Request original = result;
          result = new Request();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Request MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::KRPC.Schema.RPC.Request.Descriptor; }
      }
      
      public override Request DefaultInstanceForType {
        get { return global::KRPC.Schema.RPC.Request.DefaultInstance; }
      }
      
      public override Request BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Request) {
          return MergeFrom((Request) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Request other) {
        if (other == global::KRPC.Schema.RPC.Request.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasService) {
          Service = other.Service;
        }
        if (other.HasMethod) {
          Method = other.Method;
        }
        if (other.HasRequest_) {
          Request_ = other.Request_;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_requestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _requestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasService = input.ReadString(ref result.service_);
              break;
            }
            case 18: {
              result.hasMethod = input.ReadString(ref result.method_);
              break;
            }
            case 26: {
              result.hasRequest_ = input.ReadBytes(ref result.request_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasService {
        get { return result.hasService; }
      }
      public string Service {
        get { return result.Service; }
        set { SetService(value); }
      }
      public Builder SetService(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasService = true;
        result.service_ = value;
        return this;
      }
      public Builder ClearService() {
        PrepareBuilder();
        result.hasService = false;
        result.service_ = "";
        return this;
      }
      
      public bool HasMethod {
        get { return result.hasMethod; }
      }
      public string Method {
        get { return result.Method; }
        set { SetMethod(value); }
      }
      public Builder SetMethod(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMethod = true;
        result.method_ = value;
        return this;
      }
      public Builder ClearMethod() {
        PrepareBuilder();
        result.hasMethod = false;
        result.method_ = "";
        return this;
      }
      
      public bool HasRequest_ {
        get { return result.hasRequest_; }
      }
      public pb::ByteString Request_ {
        get { return result.Request_; }
        set { SetRequest_(value); }
      }
      public Builder SetRequest_(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRequest_ = true;
        result.request_ = value;
        return this;
      }
      public Builder ClearRequest_() {
        PrepareBuilder();
        result.hasRequest_ = false;
        result.request_ = pb::ByteString.Empty;
        return this;
      }
    }
    static Request() {
      object.ReferenceEquals(global::KRPC.Schema.RPC.RPC.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Response : pb::GeneratedMessage<Response, Response.Builder> {
    private Response() { }
    private static readonly Response defaultInstance = new Response().MakeReadOnly();
    private static readonly string[] _responseFieldNames = new string[] { "error", "error_message", "response", "time" };
    private static readonly uint[] _responseFieldTags = new uint[] { 16, 26, 34, 9 };
    public static Response DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Response DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Response ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::KRPC.Schema.RPC.RPC.internal__static_RPC_Response__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Response, Response.Builder> InternalFieldAccessors {
      get { return global::KRPC.Schema.RPC.RPC.internal__static_RPC_Response__FieldAccessorTable; }
    }
    
    public const int TimeFieldNumber = 1;
    private bool hasTime;
    private double time_;
    public bool HasTime {
      get { return hasTime; }
    }
    public double Time {
      get { return time_; }
    }
    
    public const int ErrorFieldNumber = 2;
    private bool hasError;
    private bool error_;
    public bool HasError {
      get { return hasError; }
    }
    public bool Error {
      get { return error_; }
    }
    
    public const int ErrorMessageFieldNumber = 3;
    private bool hasErrorMessage;
    private string errorMessage_ = "";
    public bool HasErrorMessage {
      get { return hasErrorMessage; }
    }
    public string ErrorMessage {
      get { return errorMessage_; }
    }
    
    public const int Response_FieldNumber = 4;
    private bool hasResponse_;
    private pb::ByteString response_ = pb::ByteString.Empty;
    public bool HasResponse_ {
      get { return hasResponse_; }
    }
    public pb::ByteString Response_ {
      get { return response_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasTime) return false;
        if (!hasError) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _responseFieldNames;
      if (hasTime) {
        output.WriteDouble(1, field_names[3], Time);
      }
      if (hasError) {
        output.WriteBool(2, field_names[0], Error);
      }
      if (hasErrorMessage) {
        output.WriteString(3, field_names[1], ErrorMessage);
      }
      if (hasResponse_) {
        output.WriteBytes(4, field_names[2], Response_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasTime) {
          size += pb::CodedOutputStream.ComputeDoubleSize(1, Time);
        }
        if (hasError) {
          size += pb::CodedOutputStream.ComputeBoolSize(2, Error);
        }
        if (hasErrorMessage) {
          size += pb::CodedOutputStream.ComputeStringSize(3, ErrorMessage);
        }
        if (hasResponse_) {
          size += pb::CodedOutputStream.ComputeBytesSize(4, Response_);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Response ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Response ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Response ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Response ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Response ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Response ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Response ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Response ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Response ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Response ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Response MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Response prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Response, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Response cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Response result;
      
      private Response PrepareBuilder() {
        if (resultIsReadOnly) {
          Response original = result;
          result = new Response();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Response MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::KRPC.Schema.RPC.Response.Descriptor; }
      }
      
      public override Response DefaultInstanceForType {
        get { return global::KRPC.Schema.RPC.Response.DefaultInstance; }
      }
      
      public override Response BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Response) {
          return MergeFrom((Response) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Response other) {
        if (other == global::KRPC.Schema.RPC.Response.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasTime) {
          Time = other.Time;
        }
        if (other.HasError) {
          Error = other.Error;
        }
        if (other.HasErrorMessage) {
          ErrorMessage = other.ErrorMessage;
        }
        if (other.HasResponse_) {
          Response_ = other.Response_;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_responseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _responseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 9: {
              result.hasTime = input.ReadDouble(ref result.time_);
              break;
            }
            case 16: {
              result.hasError = input.ReadBool(ref result.error_);
              break;
            }
            case 26: {
              result.hasErrorMessage = input.ReadString(ref result.errorMessage_);
              break;
            }
            case 34: {
              result.hasResponse_ = input.ReadBytes(ref result.response_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasTime {
        get { return result.hasTime; }
      }
      public double Time {
        get { return result.Time; }
        set { SetTime(value); }
      }
      public Builder SetTime(double value) {
        PrepareBuilder();
        result.hasTime = true;
        result.time_ = value;
        return this;
      }
      public Builder ClearTime() {
        PrepareBuilder();
        result.hasTime = false;
        result.time_ = 0D;
        return this;
      }
      
      public bool HasError {
        get { return result.hasError; }
      }
      public bool Error {
        get { return result.Error; }
        set { SetError(value); }
      }
      public Builder SetError(bool value) {
        PrepareBuilder();
        result.hasError = true;
        result.error_ = value;
        return this;
      }
      public Builder ClearError() {
        PrepareBuilder();
        result.hasError = false;
        result.error_ = false;
        return this;
      }
      
      public bool HasErrorMessage {
        get { return result.hasErrorMessage; }
      }
      public string ErrorMessage {
        get { return result.ErrorMessage; }
        set { SetErrorMessage(value); }
      }
      public Builder SetErrorMessage(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasErrorMessage = true;
        result.errorMessage_ = value;
        return this;
      }
      public Builder ClearErrorMessage() {
        PrepareBuilder();
        result.hasErrorMessage = false;
        result.errorMessage_ = "";
        return this;
      }
      
      public bool HasResponse_ {
        get { return result.hasResponse_; }
      }
      public pb::ByteString Response_ {
        get { return result.Response_; }
        set { SetResponse_(value); }
      }
      public Builder SetResponse_(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasResponse_ = true;
        result.response_ = value;
        return this;
      }
      public Builder ClearResponse_() {
        PrepareBuilder();
        result.hasResponse_ = false;
        result.response_ = pb::ByteString.Empty;
        return this;
      }
    }
    static Response() {
      object.ReferenceEquals(global::KRPC.Schema.RPC.RPC.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
